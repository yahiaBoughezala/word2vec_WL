package com.caishi.bigdata.news.word2vec.trainer;

import com.caishi.bigdata.common.word2vec.Word2VecUtils;
import org.apache.spark.mllib.feature.Word2VecModel;
import org.junit.Before;
import org.junit.Test;
import scala.Tuple2;

/**
 * 对com.caishi.bigdata.news.word2vec.trainer.NewsWord2VecTrainning 训练模型的使用说明
 * 1.模型预测过程
 * 1.1 spark-shell 命令执行,然后进行预测
 * spark-shell --master spark://10.4.1.4:7077 --executor-memory 4096m --driver-memory 4096m --executor-cores 1 --conf spark.serializer=org.apache.spark.serializer.KryoSerializer --conf spark.akka.frameSize=1024  --conf spark.kryoserializer.buffer.max=1024
 * <p>
 * scala> word2vecModel.findSynonyms("马云", 10)
 * res0: Array[(String, Double)] = Array((阿里巴巴,728873.4226757289), (马化腾,694204.3332021954), (阿里,625143.7909097292), (王健林,573490.7893402464), (大佬,560984.1972743534), (刘强东,557761.766262701), (蚂蚁,553260.4625862375), (互联网电商,543804.421894635), (首富,533350.5565971779), (互联网金融,531674.903952446))
 * <p>
 * scala> word2vecModel.findSynonyms("习近平", 10)
 * res1: Array[(String, Double)] = Array((总书记,1258720.5354656614), (重要讲话,1098006.0058208788), (贯彻,1080162.2470029), (同志,1018663.599337964), (党中央,1000798.678402671), (十八届,969787.8144741518), (俞正声,945262.791588238), (领导人,936930.0179137179), (胡锦涛,931676.3839544035), (会见,930401.4662349261))
 * <p>
 * scala> word2vecModel.findSynonyms("投资", 10)
 * res2: Array[(String, Double)] = Array((资本,791356.5030891554), (投资者,773778.486430909), (资产,743971.5181558601), (基金,737923.7578778417), (投资人,729224.5600335201), (私募,720477.3620165566), (资金,720093.0260627058), (理财,703080.1458541512), (融资,701049.4169395124), (金融,696246.1809648738))
 * <p>
 * scala> word2vecModel.findSynonyms("黄飞鸿", 10)
 * res4: Array[(String, Double)] = Array((警察故事,2746432.0988298818), (武侠片,2734469.1022346993), (方世玉,2730899.2624470615), (功夫片,2702469.5384743907), (武术指导,2690362.6627661265), (武打,2680496.695340626), (龙门客栈,2666306.568155436), (吴宇森,2609858.341092637), (武打片,2584257.845021547), (赌圣,2569117.955642752))
 * 1.2 window下运行进行预测，需要设置heap内存
 * -Xms1024m -Xmx1024m
 * Created by fuli.shen on 2017/6/30.
 */
public class NewsWord2VecTrainningTest {

    // word2vec 模型存储路径
    public static final String w2vModelPath = "hdfs://10.4.1.4:9000/news/W2V/News_W2V_Model/";

    // w2v 模型实例对象
    Word2VecModel w2vModel = null;

    @Before
    public void init() {
        w2vModel = Word2VecUtils.loadW2VModel(w2vModelPath);
    }

    @Test
    public void testfindSynonyms() {
        System.out.println("-------------------------------1.1.【投资】  关键词的同义词-----------------------------------");
        Tuple2<String, Object>[] w2vModelSynonyms = w2vModel.findSynonyms("投资", 10);
        for (Tuple2<String, Object> tuple2 : w2vModelSynonyms) {
            String word = tuple2._1();
            Double cosineSimilarity = (Double) tuple2._2();
            System.out.println(word + "\t" + cosineSimilarity);
        }
        System.out.println("-------------------------------1.2.【黄飞鸿】  关键词的同义词-----------------------------------");
        Tuple2<String, Object>[] w2vModelSynonyms_2 = w2vModel.findSynonyms("黄飞鸿", 10);
        for (Tuple2<String, Object> tuple2 : w2vModelSynonyms_2) {
            String word = tuple2._1();
            Double cosineSimilarity = (Double) tuple2._2();
            System.out.println(word + "\t" + cosineSimilarity);
        }
        System.out.println("-------------------------------1.3.【习近平】  关键词的同义词-----------------------------------");
        Tuple2<String, Object>[] w2vModelSynonyms_3 = w2vModel.findSynonyms("习近平", 10);
        for (Tuple2<String, Object> tuple2 : w2vModelSynonyms_3) {
            String word = tuple2._1();
            Double cosineSimilarity = (Double) tuple2._2();
            System.out.println(word + "\t" + cosineSimilarity);
        }
        System.out.println("-------------------------------1.3.【马云】  关键词的同义词-----------------------------------");
        Tuple2<String, Object>[] w2vModelSynonyms_4 = w2vModel.findSynonyms("马云", 10);
        for (Tuple2<String, Object> tuple2 : w2vModelSynonyms_4) {
            String word = tuple2._1();
            Double cosineSimilarity = (Double) tuple2._2();
            System.out.println(word + "\t" + cosineSimilarity);
        }
    }
    @Test
    public void testBuildWordsVector() {
        System.out.println("-------------------------------句子的向量表示-----------------------------------");
        String[] words_1 = "体育 北京 男篮 热身赛 磨合 战术 年轻 新秀 崭露头角 热身赛 中 北京队 小将 张才仁 锻炼 北京首钢队 天津 海峡 杯 比赛 中 大胜 台 啤 队 胜 负 战绩 结束 热身赛 旅 昨晚 比赛 中 后卫 方硕 手感 火热 全队 中锋 张松涛 马布里 面对 防守 马布里 持球 欲 突破 孙悦 上篮 孙悦 突破 马布里 突破 防守 方硕 突破 防守 马布里 撇嘴 莫里斯 遭遇 严防 莫里斯 出阵 张才仁 方硕 上篮 朱彦西 突破 吉喆 打暗号 张松涛 强攻 首钢队 热身赛 中 队伍 磨合 新 战术 李根 队 中 球员 顶替 队员 默契 配合 比赛 建立 首钢队 热身赛 中 锻炼 小将 张才仁 青年队 上调 队员 热身赛 中 打球 尚可 外援 莫里斯 说 打球 整体 打法 首钢队 队长 孙悦 热身赛 新 赛季 孙悦 恢复 寻找 比赛 孙悦 说 场上 稍微 身体 比赛 比赛 中 首钢队 不敌 天津 战全胜 锁定 冠军".split(" ");
        int vectorSize = 200;// 词
        double[] wordsVector_1 = Word2VecUtils.buildWordsVector(words_1, vectorSize, w2vModel);
        printWordsVector(wordsVector_1);//0.026998909888789058,-0.01186487590894103,0.024897634619264863,0.05851895920932293,-0.012189864530228078
        String[] words_2 = "体育 领队 调侃 技师 调车 时 维泰尔 安静 叫喊 阿里 巴贝内 说 莱科宁 新浪 体育讯 莱科宁 新加坡 站 季军 本赛季 登上 领奖台 队友 维泰尔 拿出 新加坡 统治 级 胜利 排位 赛后 莱科宁 赛车 不太好 度过 困难 正 赛中莱 科宁 工程师 报告 赛车 驾驶 法拉利 领队 阿德里巴 贝 澄清 莱科宁 车队 调侃 称 冰人 爱 抱怨 阿里 巴贝内 说 抱怨 技师 调校 赛车 塞巴 安静 叫喊 谈到 车手 阿里 巴贝内 说 蒙扎 强 塞巴 强 塞巴 赛道 强大 车手 领奖台".split(" ");
        double[] wordsVector_2 = Word2VecUtils.buildWordsVector(words_2, vectorSize, w2vModel);
        printWordsVector(wordsVector_2);//0.004943567619193345,0.010045223403722048,0.03035004214325454,0.02609390113502741,0.017606549547053874

        System.out.println("-------------------------------1.1.(cosineScore1_2)距离的余弦距离比较-----------------------------------");
        double cosineScore1_2 = Word2VecUtils.computeCosineScore(wordsVector_1, wordsVector_2);
        System.out.println(cosineScore1_2);
        System.out.println("-------------------------------1.2.(cosineScore3_4)距离的余弦距离比较-----------------------------------");
        String sentence3 = "菜谱 搞定 补钙 辅 食 妈妈 问 芹菜 宝宝 吃 包 饺子 炒 豆 干 买到 豆 干 临时 豆腐 补钙 宝宝 辅 食 值得注意 芹菜 焯 水 去掉 草酸 豆腐 食 影响 钙 吸收 补钙 翻 苦心 白费 道 辅 食 制作方法 太 蔬菜 成丁状 炒锅 炒 锅 成功率 高 快手 辅 食 必备 菠菜 苋菜 竹笋 苦瓜 茭白 草酸 含量 高 蔬菜 制作 焯 食 材 胡萝卜 芹菜 豆腐 米饭 调料 盐 鼓励 周岁 宝宝 吃 盐 辅 食 酌情 加盐 烹制 炒 月龄 月 难易 程度 文中 食 材 过敏 宝宝 芹菜 焯 切成 小段 芹菜 中 草酸 影响 钙 吸收 焯 去掉 草酸 宝宝 挑选 芹菜 叶 菜茎 嫩 胡萝卜 切成 小碎丁 豆腐 切成 块儿 食 材 芹菜 胡萝卜 豆腐 焖 米饭 锅 中 放入 底 油 先下 入 胡萝卜 芹菜 翻炒 加水 没过 蔬菜 稍微 炖 汤汁收 干 胡萝卜 芹菜 炒熟 加水 炖 会儿 豆腐 米饭 豆腐 炒熟 锅 加盐 宝 妈 宝宝 口味 自行 调整 月 宝宝 辅 食 鼓励 宝宝 辅 食 加盐 养成 清淡 口味 宝宝 豆腐 少 放 炒 铲 碎 米饭 盛 宝宝 吃 ";
        String sentence4 = "美食推荐 食 色 饮品 樱桃 蜜 饮 樱桃 季 吃 樱桃 樱桃 酸 倒 牙 换 法子 吃 喝 樱桃 打成 浓浆 加点 蜂蜜 改善 酸味 嚼 咽 进 肚子 里 樱桃 搅打 中会 氧化 黯然失色 确实 失色 原 粒 鲜艳 不似 褐 变 枯黄 黯淡 味道 用料 樱桃 凉开水 蜂蜜 适量 樱桃 洗净 蒂 核 料理 机 杯中 加水 盖 盖子 放入 机座 蔬果 键 打浆 结束 取下 料理 杯 杯中 蜂蜜 表面 樱桃 点缀 酸酸甜甜 ";
        double cosineScore3_4 = Word2VecUtils.computeCosineScore( Word2VecUtils.buildWordsVector(sentence3.split(" "), vectorSize, w2vModel), Word2VecUtils.buildWordsVector(sentence4.split(" "), vectorSize, w2vModel));
        System.out.println(cosineScore3_4);
        System.out.println("-------------------------------1.3.(cosineScoreNewsIds)距离的余弦距离比较-----------------------------------");
        String sentence_8ffbe33ee74dfc15 = "精明 想 卡 罗拉双 擎 卖 秘密 心 试 驾 十几万出头 家用车 写 价位 妥协 忍耐 畅销车 写 品牌 独特 秘密 发觉 星球 销量 车型 丰田 卡罗拉 动力 版本 时 跃跃欲试 诚惶诚恐 生怕 写点 指责 懂 字 概括 完 车 精明 注 试 驾 车辆 卡罗拉 双 擎 旗舰版 全新 行驶 公里 重度 车辆 外观 还好 张大嘴 丰田 年 推出 动力 车型 卡罗拉 双擎 外观设计 相较 丰田 车型 温和 正统 世纪 年代 公爵 王 入 主官 车 行列 丰田 东方 审美 设计 高 美誉度 顶天 考 斯特 皇冠 踏 佳美 海狮 亲切 大方 典范 丰田 外观 进化 过激 进 中 走 完 世纪 旗舰 雷克萨斯 身先士卒 咧开 嘴角 夸张 嘴 令人吃惊 相较 卡罗拉 双擎 设计 风格 新潮 老气 稳重 青年人 怪异 代卡罗 拉 双 擎 重心 高 车窗 面积 浅色 车身 视觉 加重 感官 评判 见仁见智 因人而异 整车 顺应时代 日间 行 车灯 外观 装饰 辨识 度 高 低调 含蓄 徽标 证明 混 动 车型 内饰 颜 值 掩盖 不住 品质 感 想 购车 预算 十万出头 消费者 自主 品牌 车 眼花缭乱 宣传 进到 卡罗拉 双 擎 时光倒流 感 自主 品牌 用上 全 液晶 大屏幕 小车 中装 氛围 灯 卡罗拉 双擎 内饰 克制 台 旗舰 型号 感受 台车 数十年 演进 中 积累 人性 财富 按钮 分区 触手可及 盲 操作 品质 感 不扬 外表 掩盖 平凡 材质 拖累 旋钮 手感 按压 反馈 细节 老人 当年 日本 制造 迷恋 意料之外 卡罗拉 双擎 自动 大灯 开过 车 最快 北京 钻 桥洞 开和 关 动作 车载 导航 规划 能力 玩 电子设备 惊讶 导航 操作 相比 智能手机 中 导航 稍 显 落后 菜单 中 车 愣 没能 研究 手机 中 导航 吐 槽 为生 胡编 开车 点 赞 卡 罗拉双 擎 开关 语言 功能 窗户 除霜 点错 丰田 造 车 秘诀 应有 配置 档次 适宜 空间 超乎 品质 时尚 落后 双 擎 节能 车 历史 纪元 路 测 豪 车 如云 车库 里 思考 半天 翻 特斯拉 牌子 车 开创 汽车 节能 环保 新纪元 车 万 下次 超 跑 没法 写 丰田 套 混 动系统 技术 回溯 年 年 丰田 量产 车 燃气轮机 电动机 概念车 性质 探索 混 动系统 雏形 年 丰田 混 动系统 伴随 普锐斯 丰田 首个 量产 动力车 年 丰田 混 动系统 技术 成熟度 提升 成本 普锐斯 发布会 丰田 混 动系统 成本 卡罗 拉双擎 套 油 电 混 动系统 顾名思义 升 排量 汽油机 电动机 起步 低速 阶段 电动机 介入 弥补 燃油 发动机 低速 时 效率 低 节油 高速 阶段 发动机 电池 充电 滑行 刹车 中 车辆 动能 回收 电池 能源 相较 品牌 混 动 丰田 套 混 动 方案 优势 外 接电源 全过程 中 车辆 加油 走 燃油 车 无异 可靠性 充足 验证 年 历代 中 故障 可靠性 说 全球 气候 路况 环境 验证 放下 电池组 整车 后备箱 凸起 影响 车主 路 测 打分 系统 美中不足 试 驾车 缘故 卡罗拉 双擎 接触 中 有待 提升 空间 方向盘 方向盘 自由 余量 重 手感 方向盘 挡 丰田 官方 卡罗拉 双擎 充满 科技 感 挡 卖点 驾驶 中 确实 灵敏 设计 尺寸 胳膊 短腿 肠炎 老师 够 不快 给油 起步 动力系统 套 混 动系统 实在 太安静 缓 速 阶段 电 驱动 无声 平顺 性 惊人 感受 发动机 启 停 声音 震动 感 品牌 自动 启 停 功能 低 宝马 系 自动 启 停 震颤 拖拉机 节油 效果 日程 缘故 试 驾 北京市 拥堵 大脚 油门 折腾 经历 驾驶 著称 胡编 折腾 里程 最长 平均 油耗 升 驾驶 控制 升 压力 说 打分 系统 动力系统 车辆 行驶 性能 开 入门级 家用车 机会 滴滴 用车 开玩笑 说 跑 滴滴 来用 操作 轻盈 拥挤 城市 环境 轻便 踏板 司机 疲劳度 车辆 操作性 借车 中 北京 年 遇 暴雨 预警 恐怖 上演 大雨 中 速度 匝道 转向 好戏 湿 滑 压 限速 肆意 超车 不安 初段 板油 发动机 车身 冲出去 车辆 稍 显 迟缓 有趣 油门 踩 深 发动机 迸发出 悦耳 啸叫 仪表盘 指针 变红 开 跑车 开玩笑 说 声音 丰田 录制 精明 放心 精明 词 贬义 内饰 动力 感受 惊讶 丰田 车 度 拿捏 超越 东西 品质 奢侈 坚守 价格 档次 角度 讲 丰田 家 精明 车厂 卡罗卡 双擎 城市 享受 新能源 车上 牌 优惠待遇 享受 优待 价位 足以 配 汽油车 直面 竞争 角度 讲 卡罗拉 双擎 精明 车型 讲 卡罗拉 双擎 消费者 优秀 动力 平顺 性 经济性 牺牲 配置 外在 喧嚣 少 动力 驰骋 咆哮 角度 讲 精明 购车者 丰田 卡罗 拉 纵横 江湖 秘密";
        String sentence_c9eae364e80cb267 = "新一代 丰田 凯美瑞 工厂 下线 新车 丰田 全球化 打造 全新 外观 内饰 设计 全球 车型 新一代 凯美瑞 前代 区分 北美版 国际版 车型 未来 国产 新一代 凯美瑞 该车 设计 国产 版本 今年年底 上市 外观 新一代 凯美瑞 采用 激进 设计 风格 前 格栅 采用 飞 翼状 设计 前 保险杠 氛围 造型 尾标 车型 红色 倾向 运动 风格 雷克萨斯 纺锤 状 前 脸 尾标 动力 车型 银色 主打 豪华 采用 横幅 式 前 保险杠 造型 尾灯 采用 光源 向下 延伸 格栅 设计 雷克萨斯 跑车 神韵 新车 增添 运动 气息 运动 版本 车尾 鸭 翼形 小型 扰流板 采用 双边 排气 布局 夸张 扩散器 新车 内饰 大胆 采用 不规则 曲线 设计 中控 面板 集成 不规则 区域 方向盘 采用 传统 式 设计 细节 处 调整 车内 全景 天窗 电子 手刹 选装 红色 运动 座椅 动力 美版 发动机 自然 吸气 发动机 匹配 速 自动 变速箱 动力系统 动力 ● 国产 车型 信息 同步 美版 外观";
        double cosineScoreNewsIds = Word2VecUtils.computeCosineScore( Word2VecUtils.buildWordsVector(sentence_8ffbe33ee74dfc15.split(" "), vectorSize, w2vModel), Word2VecUtils.buildWordsVector(sentence_c9eae364e80cb267.split(" "), vectorSize, w2vModel));
        System.out.println(cosineScoreNewsIds);
        System.out.println("-------------------------------1.4.(cosineScoreNewsIds)距离的余弦距离比较-----------------------------------");
        String textrank_tags_8ffbe33ee74dfc15 = "卡罗拉 双擎 丰田 车辆 品牌 品质 北京 车型 发动机 动力";
        String textrank_tags_c9eae364e80cb267 = "车型 运动 设计 外观 动力 版本 采用 丰田 美瑞谍 曾刚";
        double cosineScoreNewsIds_textrank = Word2VecUtils.computeCosineScore( Word2VecUtils.buildWordsVector(textrank_tags_8ffbe33ee74dfc15.split(" "), vectorSize, w2vModel), Word2VecUtils.buildWordsVector(textrank_tags_c9eae364e80cb267.split(" "), vectorSize, w2vModel));
        System.out.println(cosineScoreNewsIds_textrank);
    }


    private static void printWordsVector(double[] wordsVector_1) {
        StringBuffer wordsBuffer = new StringBuffer();
        int count = 0;
        int wordsVectorLength = wordsVector_1.length;
        for (int i = 0; i < wordsVectorLength; i++) {
            wordsBuffer.append(wordsVector_1[i]);
            count += 1;
            if (count != wordsVectorLength) {
                wordsBuffer.append(",");
            }
        }
        System.out.println(wordsBuffer);
    }
}
/**
 -------------------------------2.1.句子的向量表示-----------------------------------
 -22089.128376532037,120948.61693663991,99790.66855782326,39481.439201144996,-182655.19140736992,23823.946231947033,-70865.8364604285,10391.931521914421,89640.90129439328,-15058.817594475702,-69231.27791322481,-1390.7292362878081,-21666.5665927152,-89555.79969689605,-91303.93280197284,-24071.540344798235,-88080.30989620664,-136707.92773045533,-156935.41550606544,-111322.70479650235,29125.331317866614,14290.548955794868,-29141.983652657324,-47852.84361505071,80661.1300037629,-64111.2965927824,52513.30081036769,66424.78536567338,96273.77690474484,-41477.8135571961,-75689.71062168507,-13599.301072426892,123370.89174939076,39776.90576171875,-27334.031892828985,32791.4627495162,70165.94289909153,-523.7354873167266,10779.870768975774,-138339.66060421444,216973.55029296875,86571.30542888117,56690.68198751747,252011.54103606337,-45509.048953555044,-114653.37929751894,77308.45970783758,-113382.7327292906,43067.417666374,-114094.63354044223,21152.28758127755,117997.21342034296,150819.02490234375,95177.49770613329,-182741.12124829774,250879.76694873493,-7039.638503328376,-58235.22959913901,-109311.57247000877,29502.944786141772,183042.44204459933,-96790.389327023,-12188.597238628143,231052.50449532326,-256960.32185181783,177383.29849635132,43823.432832210434,149061.26636750108,-115745.90146909941,-4597.069861035829,-56370.651750442084,4686.388314623351,-11123.794081941656,-91775.72073784225,-19556.683450961333,-29034.040057751015,-145346.17770077765,35910.60182231938,13125.63899216958,-180719.0620929123,-83145.98319461367,-25199.53944102996,9329.980103658974,-121438.66779628368,-41048.075835341704,-9377.349697847978,-17483.835924901,-28119.089267555726,-97899.42401515016,118375.57526474699,-85911.07474286841,-163361.21734822125,-42037.949381137114,3530.986871281895,-64681.900026653886,193440.02697165954,69564.49400931541,20125.736044787485,29746.5733832963,-64120.194080597765,23356.87205491372,-62986.00739141342,-90749.81484397399,59210.334156841316,36293.13213859348,-313967.4461389944,80338.27112180377,206264.5635986328,25104.808864768493,5004.913187009479,107359.88806600308,-37919.199589440585,25909.471307877007,58242.38404664206,-131168.88824630878,95518.76678970757,-96796.27680003316,22250.581693036842,37414.66538623495,-60005.59308505277,163073.98842067894,178014.2703868621,-2294.7907871631305,-99949.77060076513,-75358.12673530228,79273.34035946908,60896.4764969852,-35822.71360848803,-116006.46081430977,91570.51204800387,-78015.86337308271,-65959.66284627652,15026.494393724914,87732.71262184632,185059.47897198878,49553.35870529315,20906.086528813074,-277281.73392479576,37832.453357941515,-107355.43241196379,59401.422801726454,-11547.955802147542,-34452.45097925029,15550.636033364392,-162823.46606445312,70698.62160638932,-137194.77614096546,-120412.44126122151,-93632.4453729752,-204711.76184194023,36384.12836253315,85260.3081628642,63408.25224276201,116260.73835404422,193677.8893975774,176277.06360423236,130680.24471849915,126018.08154862955,-225196.8703792467,-40590.31582732595,-7509.3216177564145,73740.35592343392,-147932.6314327695,-25966.072773224718,-27863.528967660503,239886.46086022613,14881.712654323754,157796.50522606526,103646.1387525086,-112777.74369854009,10033.290142094324,-157738.79534744122,15668.84032699165,27213.283167287846,-38002.39259996327,55760.029511897934,-62429.09723236364,-152423.7398704039,5032.164104776645,71364.54972293398,-149451.78259165352,7252.941161409431,-62103.49178993155,-10105.084468176605,56308.741711537776,-12561.343038296482,-6138.6632297060905,40523.10704334504,11438.853860557627,66448.1989944878,-29322.259772064488,-71166.76583890303,-60928.86859578824,39965.660757642276,-184236.10569609195,105152.22834763833,-295130.3678706458,142102.6260762346,-92654.11677635263,-246116.13644997132
 -79206.51096231429,35991.83540919569,46493.578224057055,75577.39127737576,-118922.38733510501,75326.72271278256,-2774.9837343810036,-36205.92488185695,70535.16503105788,22377.906435106623,31344.33379626665,-47815.597809588326,-9687.881371920226,-84524.31104541216,-1463.8140588979252,5984.012794369557,-58883.94704549821,-52469.43171416736,-87102.8080994653,-79959.69771688493,17899.87735935899,-38781.601936715546,-38891.412097368084,57098.94882077076,30825.27638119557,-26090.005599225155,6595.78461894051,103625.81037477587,33524.609551101435,-18976.087766553534,50372.575371413935,34971.639199178724,13488.274618180072,46785.739615018254,18619.943301341573,-20657.78745557441,-19985.926145459784,-15305.10486039959,-97951.3092661373,-59273.73085697362,26429.293060803022,87058.50896516393,31366.009863931624,75928.5608850698,-59754.18074510918,-35818.37015921171,52340.059282646806,-10403.085873463115,34084.27427198066,-49830.16510109823,27709.018254764746,38576.83324494909,127034.46349197137,-59679.30601051205,-57782.612576844265,68172.50334142466,22684.549672611425,-36106.20377337346,-55289.17675981365,41196.5937840196,38936.32022244813,-13333.326828253073,36302.04924836706,123308.19761082383,-50491.69034313765,39724.801053813244,-23333.715576171875,47170.062483990776,-88078.23989017674,-1755.3532534740011,19047.262751344773,16775.904440457703,9296.550801261526,-62341.50624759862,-26100.91245857614,5367.950447457735,-134191.68894082992,-30073.59190893955,-25032.600815569767,-44862.50279360912,-18681.883675997375,-11000.93154506996,-103176.12776709384,-16610.622522573,99537.37179615459,44939.39644435194,-23583.165031057888,-64108.88726706583,-76.99993196080942,43624.20429067143,21300.917719043668,-47670.441974577356,-98633.49452184458,15084.34274041848,-5368.876817046619,63080.22048650023,42256.53871029713,1478.2720426965932,7926.5022703076975,-79162.80585217084,13547.035610011366,52637.37457575563,42171.20691118084,117360.12579345703,-33754.866357021645,-85429.91450475474,35700.22958824283,33178.383486888444,-18872.32091484695,-7734.265002891666,87755.92507684426,-37836.501563900805,-112194.41994188653,41813.93749799885,9366.257582367443,4387.894958058341,18881.12275470671,-67363.96317578925,17010.361128009732,7818.710063996862,49485.02010958312,38966.822149558146,-57274.089365474516,-15500.402491835297,-4889.813376504867,27903.66339411501,8463.331847143954,-54456.57112897029,-5663.4341060450815,19965.32038053919,-31292.446405129354,-19317.102157842917,17031.499866923346,11695.90141621574,37279.58838691086,26731.5803496564,-41416.694127817624,-136996.65162033332,60427.073030065316,-18429.54694103804,60666.94483222336,41576.09354988473,9713.473328637296,-21098.18835649334,35019.47041395844,16818.99212746542,-21002.897442927126,-22252.096923828125,-109818.6893770812,-63216.12222527676,-7859.259775630763,62207.433381627816,-7162.289168561091,-4341.950274858318,30961.536933273565,83060.55444736168,67405.03011934874,-16278.55824154713,-115655.31433730829,-68136.36908859503,-57556.79849193135,52630.617267546106,27395.024524626184,69092.93709276544,79118.4727282915,36146.16660196273,38172.276191086065,41678.77376969134,38123.12981877562,-30554.844916672002,-13131.473232581968,-181951.15682433083,-26520.66461681929,-31478.57505072922,-93693.16905237417,-3020.6200771644467,-16691.3363137167,-72635.04337560936,-23069.170234054815,42340.01255523181,-13198.864819886254,31364.11120805584,-42508.13056720671,14660.73135526063,86594.74907346632,-47702.38751670963,-40404.73759485464,-16326.464040287205,20598.55131555776,-14846.54492987961,37507.28980892994,-74401.68323154136,8793.30969838627,65246.521272252816,-28018.749932961386,48826.17050571129,-134926.546875,17742.76349477299,-37994.12844398373,-117667.90437736668
 -------------------------------3.距离的余弦距离比较-----------------------------------
 0.628323483368259
 */
